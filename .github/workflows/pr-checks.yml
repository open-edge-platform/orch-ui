# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
name: PR Checks

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  detect-changed-folders:
    runs-on: 'ubuntu-latest'
    outputs:
      changed_projects_root: ${{ steps.discover-changes.outputs.changed_projects }}
      changed_apps: ${{ steps.discover-changes-apps.outputs.changed_projects }}
    steps:
      - name: Git safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Discover changed folders at root level
        uses: open-edge-platform/orch-ci/discover-changed-subfolders@main
        id: discover-changes

      - name: Discover changed apps
        uses: open-edge-platform/orch-ci/discover-changed-subfolders@main
        id: discover-changes-apps
        with:
          project_folder: "apps"

  license-check:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: License check
        run: make license


  forbidden-words-check:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Forbidden words check
        run: make forbidden-words
        continue-on-error: true   # TODO: re-enforce when all forbidden words are cleaned up

  setup-conditions:
    needs: detect-changed-folders
    runs-on: 'ubuntu-latest'
    outputs:
      common_condition: ${{ contains(needs.detect-changed-folders.outputs.changed_projects_root, 'library') || contains(needs.detect-changed-folders.outputs.changed_projects_root, '.github') || contains(needs.detect-changed-folders.outputs.changed_projects_root, 'common.mk') || '' == 'false' }}
    steps:
      - name: Log details
        run: |
          echo "Did library or .github dirs change? ${{ contains(needs.detect-changed-folders.outputs.changed_projects_root, 'library') || contains(needs.detect-changed-folders.outputs.changed_projects_root, '.github') || '' == 'false' }}"

  library-pipeline:
    needs: setup-conditions
    if: needs.setup-conditions.outputs.common_condition == 'true'
    uses: ./.github/workflows/library.yml

  e2e-tests-pipeline:
    uses: ./.github/workflows/e2e-tests.yml
    secrets: inherit

  pre-merge-pipeline:
    needs: [detect-changed-folders, setup-conditions]
    if: needs.setup-conditions.outputs.common_condition == 'false' && fromJson(needs.detect-changed-folders.outputs.changed_apps)[0] != null
    strategy:
      fail-fast: false
      matrix:
        project_folder: ${{ fromJson(needs.detect-changed-folders.outputs.changed_apps) }}
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@main
    with:
      bootstrap_tools: "base,helm,yq,jq"
      run_security_scans: true
      run_version_check: true
      run_dep_version_check: false
      run_build: true
      run_lint: true
      run_test: true
      run_validate_clean_folder: true
      run_docker_build: true
      run_scan_containers: true
      run_artifact: false
      run_helm_build: true
      run_reuse_check: true
      prefix_tag_separator: "/"
      project_folder: apps/${{ matrix.project_folder }}
      orch_ci_repo_ref: main
    secrets: inherit

  pre-merge-pipeline-all:
    needs: setup-conditions
    if: needs.setup-conditions.outputs.common_condition == 'true'
    strategy:
      fail-fast: false
      matrix:
        project_folder: ["admin", "app-orch", "cluster-orch", "infra", "root"]
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@main
    with:
      bootstrap_tools: "base,helm,yq,jq"
      run_security_scans: true
      run_version_check: true
      run_dep_version_check: false
      run_build: true
      run_lint: true
      run_test: true
      run_validate_clean_folder: true
      run_docker_build: true
      run_scan_containers: true
      run_artifact: false
      run_helm_build: true
      run_reuse_check: true
      prefix_tag_separator: "/"
      project_folder: apps/${{ matrix.project_folder }}
      orch_ci_repo_ref: main
    secrets: inherit
